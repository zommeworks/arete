{"ast":null,"code":"import $ from 'jquery';\n/* web audio functions */\n\nwindow.addEventListener('load', initAudio, false);\n\nfunction initAudio() {\n  try {\n    // Fix up for prefixing\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context = new AudioContext();\n  } catch (e) {\n    alert('Web Audio API is not supported in this browser');\n  }\n}\n\nvar ttsBuffer = null; // Fix up prefixing\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nvar context = new AudioContext();\n\nfunction loadSound(filename) {\n  var request = new XMLHttpRequest();\n  var url = '../src/sfx/' + filename + '.mp3';\n  request.open('GET', url, true);\n  request.responseType = 'arraybuffer'; // Decode asynchronously\n\n  request.onload = function () {\n    context.decodeAudioData(request.response, function (buffer) {\n      ttsBuffer = buffer;\n    }, onError);\n  };\n\n  request.send();\n}\n\nfunction onError(e) {\n  console.log(\"error loading an audio file.\", e);\n}\n\nfunction playSound(buffer) {\n  var source = context.createBufferSource(); // creates a sound source\n\n  source.buffer = buffer; // tell the source which sound to play\n\n  source.connect(context.destination); // connect the source to the context's destination (the speakers)\n\n  source.start(0); // play the source now\n  // note: on older systems, may have to use deprecated noteOn(time);\n}\n/* execution */","map":{"version":3,"sources":["/Users/zomme/Github/arete/src/interaction.js"],"names":["$","window","addEventListener","initAudio","AudioContext","webkitAudioContext","context","e","alert","ttsBuffer","loadSound","filename","request","XMLHttpRequest","url","open","responseType","onload","decodeAudioData","response","buffer","onError","send","console","log","playSound","source","createBufferSource","connect","destination","start"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCC,SAAhC,EAA2C,KAA3C;;AACA,SAASA,SAAT,GAAqB;AACnB,MAAI;AACF;AACAF,IAAAA,MAAM,CAACG,YAAP,GAAsBH,MAAM,CAACG,YAAP,IAAqBH,MAAM,CAACI,kBAAlD;AACAC,IAAAA,OAAO,GAAG,IAAIF,YAAJ,EAAV;AACD,GAJD,CAKA,OAAMG,CAAN,EAAS;AACPC,IAAAA,KAAK,CAAC,gDAAD,CAAL;AACD;AACF;;AACD,IAAIC,SAAS,GAAG,IAAhB,C,CACA;;AACAR,MAAM,CAACG,YAAP,GAAsBH,MAAM,CAACG,YAAP,IAAuBH,MAAM,CAACI,kBAApD;AACA,IAAIC,OAAO,GAAG,IAAIF,YAAJ,EAAd;;AAEA,SAASM,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACA,MAAIC,GAAG,GAAG,gBAAcH,QAAd,GAAuB,MAAjC;AACAC,EAAAA,OAAO,CAACG,IAAR,CAAa,KAAb,EAAoBD,GAApB,EAAyB,IAAzB;AACAF,EAAAA,OAAO,CAACI,YAAR,GAAuB,aAAvB,CAJ2B,CAK3B;;AACAJ,EAAAA,OAAO,CAACK,MAAR,GAAiB,YAAW;AAC1BX,IAAAA,OAAO,CAACY,eAAR,CAAwBN,OAAO,CAACO,QAAhC,EAA0C,UAASC,MAAT,EAAiB;AACzDX,MAAAA,SAAS,GAAGW,MAAZ;AACD,KAFD,EAEGC,OAFH;AAGD,GAJD;;AAKAT,EAAAA,OAAO,CAACU,IAAR;AACD;;AAED,SAASD,OAAT,CAAiBd,CAAjB,EAAoB;AAClBgB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CjB,CAA5C;AACD;;AAED,SAASkB,SAAT,CAAmBL,MAAnB,EAA2B;AACzB,MAAIM,MAAM,GAAGpB,OAAO,CAACqB,kBAAR,EAAb,CADyB,CACkB;;AAC3CD,EAAAA,MAAM,CAACN,MAAP,GAAgBA,MAAhB,CAFyB,CAEkB;;AAC3CM,EAAAA,MAAM,CAACE,OAAP,CAAetB,OAAO,CAACuB,WAAvB,EAHyB,CAGkB;;AAC3CH,EAAAA,MAAM,CAACI,KAAP,CAAa,CAAb,EAJyB,CAIkB;AACA;AAC5C;AAGD","sourcesContent":["import $ from 'jquery';\n\n/* web audio functions */\nwindow.addEventListener('load', initAudio, false);\nfunction initAudio() {\n  try {\n    // Fix up for prefixing\n    window.AudioContext = window.AudioContext||window.webkitAudioContext;\n    context = new AudioContext();\n  }\n  catch(e) {\n    alert('Web Audio API is not supported in this browser');\n  }\n}\nvar ttsBuffer = null;\n// Fix up prefixing\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nvar context = new AudioContext();\n\nfunction loadSound(filename) {\n  var request = new XMLHttpRequest();\n  var url = '../src/sfx/'+filename+'.mp3';\n  request.open('GET', url, true);\n  request.responseType = 'arraybuffer';\n  // Decode asynchronously\n  request.onload = function() {\n    context.decodeAudioData(request.response, function(buffer) {\n      ttsBuffer = buffer;\n    }, onError);\n  }\n  request.send();\n}\n\nfunction onError(e) {\n  console.log(\"error loading an audio file.\", e);\n}\n\nfunction playSound(buffer) {\n  var source = context.createBufferSource(); // creates a sound source\n  source.buffer = buffer;                    // tell the source which sound to play\n  source.connect(context.destination);       // connect the source to the context's destination (the speakers)\n  source.start(0);                           // play the source now\n                                             // note: on older systems, may have to use deprecated noteOn(time);\n}\n\n\n/* execution */\n"]},"metadata":{},"sourceType":"module"}