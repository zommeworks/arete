{"ast":null,"code":"var _jsxFileName = \"/Users/zomme/Github/arete/src/App.js\";\nimport React from 'react';\nimport styles from './App.css';\nimport Interaction from './interaction.js';\nimport data from './testscript.json';\nimport $ from 'jquery';\n/*\n  UI scheme\n\n ┏━━━━ baseplate ━━━━┓\n ┃  ┏━━━━ AudioController ━━━━┓\n ┃  ┃\n ┃  ┗━━━━━━━━┛  ┃\n ┃  ┏━━━━ BoxAgent ━━━━━━━━━━━━━━━━━━━━━┓\n ┃  ┃  ┏━━━━ ButtonAgent ━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  props: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┃  state: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┃  ┏━━━━ TextSubtitle ━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  props: text (string)       ┃  ┃\n ┃  ┃  ┃         playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┃  state: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n ┃\n ┃  ┏━━━━ BoxController ━━━━━━━━━━━━━━━━━━━━━━━━┓\n ┃  ┃  props: theme (light / dark)              ┃\n ┃  ┃         playStatus (0/1/2)                ┃\n ┃  ┃  state: theme (light / dark)              ┃\n ┃  ┃         playStatus (0/1/2)                ┃\n ┃  ┃  ┏━━━━ div.box-bar ━━━━━━━━━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  ┏━━━━ ProgressBar ━━━━━━━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┃         maxTimeout (int)      ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ div.bar-base ━━━━━━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┃  ┏━━━━ div.box-buttons ━━━━━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnRewind ━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnPlayPause ━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃         playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃         playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnSkip ━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnExit ━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n\n props and states\n\n playStatus:\n  0: null,\n  1: audio ready,\n  2: playing,\n  3: audio end\n**/\n\nconst currentData = {};\nconst nextData = {};\nwindow.addEventListener('load', initData, false);\n\nfunction initData() {\n  try {\n    let docID = window.location.hash.split('#');\n    $.each(data.list, function (i) {\n      if (data.list[i].name === docID[1]) {\n        overwriteData(data.list[i], currentData);\n        console.log(currentData);\n\n        if (data.list[i].name.match(/(prompt|statement)/)) {}\n      }\n    });\n  } catch (e) {\n    alert('failed to load data');\n  }\n}\n\nfunction overwriteData(source, target) {\n  target.name = source.name;\n  target.message = source.message;\n  target.displayMessage = source.displayMessage;\n  target.displayOnly = source.displayOnly;\n  target.hasImage = source.hasImage;\n  target.epd = source.epd;\n  target.answerEntity = source.answerEntity;\n  target.maxTimeout = source.maxTimeout;\n  target.duration = source.duration;\n}\n\nclass Baseplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      message: '',\n      displayMessage: '',\n      displayOnly: 0,\n      hasImage: 0,\n      epd: 0,\n      answerEntity: '',\n      maxTimeout: 0,\n      duration: 0,\n      currentPlayTime: 0,\n      playStatus: 0,\n      theme: 'light'\n    };\n    this.handler = this.handler.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    state.name = props.name;\n    return state;\n  }\n\n  static componentDidMount() {\n    this.setState(currentData);\n    console.log(this.state);\n  }\n\n  handler() {\n    if (currentData.playStatus === 2) {\n      currentData.playStatus = 3;\n      currentData.theme = 'light';\n    } else {\n      currentData.playStatus = 2;\n      currentData.theme = 'dark';\n    }\n\n    this.setState(currentData);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"baseplate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BoxAgent, {\n      playStatus: this.state.playStatus,\n      theme: this.state.theme,\n      displayMessage: this.state.displayMessage,\n      handler: this.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BoxController, {\n      theme: this.state.theme,\n      handler: this.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/* * * * * * * * * * * * *\n * BoxAgent and children *\n * * * * * * * * * * * * */\n\n\nclass BoxAgent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 0,\n      theme: 'light',\n      displayMessage: \"dummy text\"\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      playStatus: props.playStatus,\n      theme: props.theme,\n      displayMessage: props.displayMessage\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-agent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ButtonAgent, {\n      playStatus: this.state.playStatus,\n      handler: this.props.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextSubtitle, {\n      theme: this.state.theme,\n      displayMessage: this.state.displayMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass ButtonAgent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setButtonStatus = param => {\n      switch (param) {\n        case 0:\n          //audio is not loaded\n          return 'idle';\n\n        case 1:\n          //audio is ready\n          return 'idle';\n\n        case 2:\n          //audio is playing\n          return 'listening';\n\n        case 3:\n          //audio ended\n          return 'idle';\n\n        default:\n          return 'idle';\n      }\n    };\n\n    this.state = {\n      playStatus: 0\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      playStatus: props.playStatus\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btnAgent\",\n      className: \"button-agent status-\" + this.setButtonStatus(this.state.playStatus),\n      onClick: this.props.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass TextSubtitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: 'light',\n      displayMessage: \"dummy text\"\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme,\n      message: props.message\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      id: \"txtSubtitle\",\n      className: \"theme-\" + this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, this.state.displayMessage);\n  }\n\n}\n/*\nclass AudioController extends React.Component {\n\n}\nclass AudioComp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      name: props.name,\n      message: props.message,\n      displayMessage: props.displayMessage,\n      displayOnly: props.displayOnly,\n      hasImage: props.hasImage,\n      epd: props.epd,\n      answerEntity: props.answerEntity,\n      maxTimeout: props.maxTimeout,\n      duration: props.duration,\n      currentPlayTime: props.currentPlayTime,\n      playStatus: props.playStatus,\n      theme: props.theme\n    };\n  }\n  render() {\n    return(\n\n    );\n  }\n}\n*/\n\n/* * * * * * * * * * * * * * * *\n * BoxController and children  *\n * * * * * * * * * * * * * * * */\n\n\nclass BoxController extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTheme = () => {\n      this.setState({\n        theme: this.state.theme === 'light' ? 'dark' : 'light'\n      });\n    };\n\n    this.state = {\n      theme: 'light'\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-controller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar bar-base theme-\" + this.state.theme,\n      onClick: this.setTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ButtonSmall, {\n      name: \"btnRewind\",\n      alignRight: false,\n      theme: this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ButtonSmall, {\n      name: \"btnSkip\",\n      alignRight: false,\n      theme: this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ButtonSmall, {\n      name: \"btnExit\",\n      alignRight: true,\n      theme: this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass ButtonSmall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: 'light',\n      clicked: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme,\n      clicked: props.clicked\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: this.props.name,\n      className: \"button-small theme-\" + this.state.theme + (this.props.alignRight ? ' align-right' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nfunction App() {\n  const element = /*#__PURE__*/React.createElement(Baseplate, {\n    name: currentData.name,\n    message: currentData.message,\n    displayMessage: currentData.displayMessage,\n    displayOnly: currentData.displayOnly,\n    hasImage: currentData.hasImage,\n    epd: currentData.epd,\n    answerEntity: currentData.answerEntity,\n    maxTimeout: currentData.maxTimeout,\n    duration: currentData.duration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 19\n    }\n  });\n  return element;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zomme/Github/arete/src/App.js"],"names":["React","styles","Interaction","data","$","currentData","nextData","window","addEventListener","initData","docID","location","hash","split","each","list","i","name","overwriteData","console","log","match","e","alert","source","target","message","displayMessage","displayOnly","hasImage","epd","answerEntity","maxTimeout","duration","Baseplate","Component","constructor","props","state","currentPlayTime","playStatus","theme","handler","bind","getDerivedStateFromProps","componentDidMount","setState","render","BoxAgent","ButtonAgent","setButtonStatus","param","TextSubtitle","BoxController","setTheme","ButtonSmall","clicked","alignRight","App","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './App.css';\nimport Interaction from './interaction.js';\nimport data from './testscript.json'\nimport $ from 'jquery';\n\n\n/*\n  UI scheme\n\n ┏━━━━ baseplate ━━━━┓\n ┃  ┏━━━━ AudioController ━━━━┓\n ┃  ┃\n ┃  ┗━━━━━━━━┛  ┃\n ┃  ┏━━━━ BoxAgent ━━━━━━━━━━━━━━━━━━━━━┓\n ┃  ┃  ┏━━━━ ButtonAgent ━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  props: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┃  state: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┃  ┏━━━━ TextSubtitle ━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  props: text (string)       ┃  ┃\n ┃  ┃  ┃         playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┃  state: playStatus (0/1/2)  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n ┃\n ┃  ┏━━━━ BoxController ━━━━━━━━━━━━━━━━━━━━━━━━┓\n ┃  ┃  props: theme (light / dark)              ┃\n ┃  ┃         playStatus (0/1/2)                ┃\n ┃  ┃  state: theme (light / dark)              ┃\n ┃  ┃         playStatus (0/1/2)                ┃\n ┃  ┃  ┏━━━━ div.box-bar ━━━━━━━━━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  ┏━━━━ ProgressBar ━━━━━━━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┃         maxTimeout (int)      ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ div.bar-base ━━━━━━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┃  ┏━━━━ div.box-buttons ━━━━━━━━━━━━━━━━┓  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnRewind ━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnPlayPause ━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃         playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃         playStatus (0/1/2)    ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnSkip ━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┃  ┏━━━━ BtnSmall #btnExit ━━━━━━━━┓  ┃  ┃\n ┃  ┃  ┃  ┃  props: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┃  state: theme (light / dark)  ┃  ┃  ┃\n ┃  ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃  ┃\n ┃  ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  ┃\n ┃  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n\n\n props and states\n\n playStatus:\n  0: null,\n  1: audio ready,\n  2: playing,\n  3: audio end\n**/\n\nconst currentData = {};\nconst nextData = {};\n\nwindow.addEventListener('load', initData, false);\n\nfunction initData(){\n  try {\n    let docID = window.location.hash.split('#');\n    $.each(data.list, function(i){\n      if(data.list[i].name === docID[1]){\n        overwriteData(data.list[i], currentData);\n        console.log(currentData);\n        if(data.list[i].name.match(/(prompt|statement)/)) {\n        }\n      }\n    });\n  }\n  catch(e) {\n    alert('failed to load data');\n  }\n}\n\nfunction overwriteData(source, target) {\n  target.name = source.name;\n  target.message = source.message;\n  target.displayMessage = source.displayMessage;\n  target.displayOnly = source.displayOnly;\n  target.hasImage = source.hasImage;\n  target.epd = source.epd;\n  target.answerEntity = source.answerEntity;\n  target.maxTimeout = source.maxTimeout;\n  target.duration = source.duration;\n}\n\nclass Baseplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      message: '',\n      displayMessage: '',\n      displayOnly: 0,\n      hasImage: 0,\n      epd: 0,\n      answerEntity: '',\n      maxTimeout: 0,\n      duration: 0,\n      currentPlayTime: 0,\n      playStatus: 0,\n      theme: 'light'\n    }\n    this.handler = this.handler.bind(this);\n  }\n  static getDerivedStateFromProps(props, state) {\n    state.name = props.name;\n    return state;\n  }\n  static componentDidMount() {\n    this.setState(currentData);\n    console.log(this.state);\n  }\n  handler() {\n    if(currentData.playStatus === 2) {\n      currentData.playStatus = 3;\n      currentData.theme = 'light';\n    }\n    else {\n      currentData.playStatus = 2;\n      currentData.theme = 'dark';\n    }\n    this.setState(currentData);\n  }\n  render() {\n    return(\n      <div id=\"baseplate\">\n        <BoxAgent\n          playStatus={this.state.playStatus}\n          theme={this.state.theme}\n          displayMessage={this.state.displayMessage}\n          handler={this.handler}\n        />\n        <BoxController\n          theme={this.state.theme}\n          handler={this.handler}\n        />\n      </div>\n    );\n  }\n}\n\n\n\n\n/* * * * * * * * * * * * *\n * BoxAgent and children *\n * * * * * * * * * * * * */\n\nclass BoxAgent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 0,\n      theme: 'light',\n      displayMessage: \"dummy text\"\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      playStatus: props.playStatus,\n      theme: props.theme,\n      displayMessage: props.displayMessage\n    };\n  }\n  render() {\n    return(\n      <div className=\"box-agent\">\n        <ButtonAgent\n          playStatus={this.state.playStatus}\n          handler={this.props.handler}\n        />\n        <TextSubtitle theme={this.state.theme} displayMessage={this.state.displayMessage}/>\n      </div>\n    );\n  }\n}\n\nclass ButtonAgent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 0\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      playStatus: props.playStatus\n    };\n  }\n  setButtonStatus = (param) => {\n    switch(param) {\n      case 0: //audio is not loaded\n        return 'idle';\n      case 1: //audio is ready\n        return 'idle';\n      case 2: //audio is playing\n        return 'listening';\n      case 3: //audio ended\n        return 'idle';\n      default:\n        return 'idle';\n    }\n  }\n  render() {\n    return(\n      <button\n        id=\"btnAgent\"\n        className={\"button-agent status-\"+this.setButtonStatus(this.state.playStatus)}\n        onClick={this.props.handler}\n      >\n      </button>\n    );\n  }\n}\nclass TextSubtitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: 'light',\n      displayMessage: \"dummy text\"\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme,\n      message: props.message\n    };\n  }\n  render() {\n    return(\n      <p\n        id=\"txtSubtitle\"\n        className={\"theme-\"+this.state.theme}\n      >\n        {this.state.displayMessage}\n      </p>\n    );\n  }\n}\n\n/*\nclass AudioController extends React.Component {\n\n}\nclass AudioComp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      name: props.name,\n      message: props.message,\n      displayMessage: props.displayMessage,\n      displayOnly: props.displayOnly,\n      hasImage: props.hasImage,\n      epd: props.epd,\n      answerEntity: props.answerEntity,\n      maxTimeout: props.maxTimeout,\n      duration: props.duration,\n      currentPlayTime: props.currentPlayTime,\n      playStatus: props.playStatus,\n      theme: props.theme\n    };\n  }\n  render() {\n    return(\n\n    );\n  }\n}\n*/\n\n/* * * * * * * * * * * * * * * *\n * BoxController and children  *\n * * * * * * * * * * * * * * * */\n\nclass BoxController extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: 'light'\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme\n    };\n  }\n  setTheme = () => {\n    this.setState({ theme: this.state.theme === 'light' ? 'dark' : 'light' });\n  }\n  render() {\n    return(\n      <div className=\"box-controller\">\n        <div className=\"box-bar\">\n          <div className={\"bar bar-base theme-\"+this.state.theme}\n          onClick={this.setTheme}></div>\n        </div>\n        <div className=\"box-buttons\">\n          <ButtonSmall name=\"btnRewind\" alignRight={false} theme={this.state.theme} />\n          <ButtonSmall name=\"btnSkip\" alignRight={false} theme={this.state.theme} />\n          <ButtonSmall name=\"btnExit\" alignRight={true} theme={this.state.theme} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ButtonSmall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: 'light',\n      clicked: false\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      theme: props.theme,\n      clicked: props.clicked\n    };\n  }\n  render() {\n    return (\n      <button\n        id={this.props.name}\n        className={\n          \"button-small theme-\"+\n          this.state.theme+\n          (this.props.alignRight ? ' align-right' : '')\n        }\n      >\n      </button>\n    );\n  }\n}\n\n\nfunction App() {\n  const element = <Baseplate\n    name={currentData.name}\n    message={currentData.message}\n    displayMessage={currentData.displayMessage}\n    displayOnly={currentData.displayOnly}\n    hasImage={currentData.hasImage}\n    epd={currentData.epd}\n    answerEntity={currentData.answerEntity}\n    maxTimeout={currentData.maxTimeout}\n    duration={currentData.duration}\n  />;\n  return(element);\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}