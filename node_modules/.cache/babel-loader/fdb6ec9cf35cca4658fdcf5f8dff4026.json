{"ast":null,"code":"import $ from 'jquery';\n\nfunction toggleAgent(target) {\n  if ($(target).hasClass('status-idle')) {\n    $(target).removeClass('status-idle');\n    $(target).addClass('status-listening');\n    $('.theme-light').addClass('theme-dark');\n    $('.theme-light').removeClass('theme-light');\n    loadSound('sfx_listening');\n    playSound(ttsBuffer);\n  } else if ($(target).hasClass('status-listening')) {\n    $(target).removeClass('status-listening');\n    $(target).addClass('status-idle');\n    $('.theme-dark').addClass('theme-light');\n    $('.theme-dark').removeClass('theme-dark');\n  }\n}\n/* web audio functions */\n\n\nvar context;\nwindow.addEventListener('load', init, false);\n\nfunction init() {\n  try {\n    // Fix up for prefixing\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context = new AudioContext();\n  } catch (e) {\n    alert('Web Audio API is not supported in this browser');\n  }\n}\n\nvar ttsBuffer = null; // Fix up prefixing\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nvar context = new AudioContext();\n\nfunction loadSound(filename) {\n  var request = new XMLHttpRequest();\n  var url = '../src/sfx/' + filename + '.wav';\n  request.open('GET', url, true);\n  request.responseType = 'arraybuffer'; // Decode asynchronously\n\n  request.onload = function () {\n    context.decodeAudioData(request.response, function (buffer) {\n      ttsBuffer = buffer;\n    }, onError);\n  };\n\n  request.send();\n}\n\nfunction onError() {\n  console.log(\"error loading an audio file.\");\n}\n\nfunction playSound(buffer) {\n  var source = context.createBufferSource(); // creates a sound source\n\n  source.buffer = buffer; // tell the source which sound to play\n\n  source.connect(context.destination); // connect the source to the context's destination (the speakers)\n\n  source.start(0); // play the source now\n  // note: on older systems, may have to use deprecated noteOn(time);\n}\n/* execution */\n\n\n$(document).ready(function () {});\n$('#btnAgent').click(function () {\n  toggleAgent('#btnAgent');\n});","map":{"version":3,"sources":["/Users/zomme/Github/arete/docs/src/interaction.js"],"names":["$","toggleAgent","target","hasClass","removeClass","addClass","loadSound","playSound","ttsBuffer","context","window","addEventListener","init","AudioContext","webkitAudioContext","e","alert","filename","request","XMLHttpRequest","url","open","responseType","onload","decodeAudioData","response","buffer","onError","send","console","log","source","createBufferSource","connect","destination","start","document","ready","click"],"mappings":"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","sourcesContent":["import $ from 'jquery';\n\nfunction toggleAgent(target){\n    if($(target).hasClass('status-idle')){\n      $(target).removeClass('status-idle');\n      $(target).addClass('status-listening');\n      $('.theme-light').addClass('theme-dark');\n      $('.theme-light').removeClass('theme-light');\n      loadSound('sfx_listening');\n      playSound(ttsBuffer);\n    }\n    else if($(target).hasClass('status-listening')){\n      $(target).removeClass('status-listening');\n      $(target).addClass('status-idle');\n      $('.theme-dark').addClass('theme-light');\n      $('.theme-dark').removeClass('theme-dark');\n    }\n  }\n\n\n  /* web audio functions */\n  var context;\n  window.addEventListener('load', init, false);\n  function init() {\n    try {\n      // Fix up for prefixing\n      window.AudioContext = window.AudioContext||window.webkitAudioContext;\n      context = new AudioContext();\n    }\n    catch(e) {\n      alert('Web Audio API is not supported in this browser');\n    }\n  }\n  var ttsBuffer = null;\n  // Fix up prefixing\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  var context = new AudioContext();\n\n  function loadSound(filename) {\n    var request = new XMLHttpRequest();\n    var url = '../src/sfx/'+filename+'.wav';\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n    // Decode asynchronously\n    request.onload = function() {\n      context.decodeAudioData(request.response, function(buffer) {\n        ttsBuffer = buffer;\n      }, onError);\n    }\n    request.send();\n  }\n\n  function onError() {\n    console.log(\"error loading an audio file.\");\n  }\n\n  function playSound(buffer) {\n    var source = context.createBufferSource(); // creates a sound source\n    source.buffer = buffer;                    // tell the source which sound to play\n    source.connect(context.destination);       // connect the source to the context's destination (the speakers)\n    source.start(0);                           // play the source now\n                                               // note: on older systems, may have to use deprecated noteOn(time);\n  }\n\n\n  /* execution */\n  $(document).ready(function(){\n  });\n  $('#btnAgent').click(function(){\n    toggleAgent('#btnAgent');\n  });\n"]},"metadata":{},"sourceType":"module"}